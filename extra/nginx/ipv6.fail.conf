# ipv6.fail is my dev domain

server {
        listen 80;
        listen [::]:80;
        server_name ipv6.fail www.ipv6.fail api.ipv6.fail;
        return 301 https://$server_name$request_uri;
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name ipv6.fail www.ipv6.fail;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        ssl_certificate /etc/letsencrypt/live/ipv6.fail/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ipv6.fail/privkey.pem;

        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;

        # Root
        root /home/lasse/code/go/src/github.com/lasseh/whynoipv6-web/dist;
        index index.html;

        # Frontend
        location / {
        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header Strict-Transport-Security max-age=31536000;

        # Fuck Google
        add_header Permissions-Policy interest-cohort=();

        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header Referrer-Policy 'no-referrer';
        #add_header Content-Security-Policy "default-src https:" always;
        #add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ipv6.fail https://api.ipv6.fail; style-src 'self' 'unsafe-inline' https://ipv6.fail; img-src 'self' data: https://ipv6.fail; font-src 'self' https://fonts.googleapis.com; connect-src 'self' https://api.ipv6.fail; media-src 'self'; object-src 'none'; frame-ancestors 'self'; base-uri 'self';" always;

        access_log /var/log/nginx/ipv6.fail.log pretty;
        root /home/lasse/code/go/src/github.com/lasseh/whynoipv6-web/dist;
        expires 1M;
        add_header Pragma public;
        add_header Cache-Control "public";
        try_files $uri $uri/ /index.html;
        }
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.ipv6.fail;
        #ssl on;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        ssl_certificate /etc/letsencrypt/live/ipv6.fail/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ipv6.fail/privkey.pem;

        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header Strict-Transport-Security max-age=15768000;

        # Fuck Google
        add_header Permissions-Policy interest-cohort=();

        # API
        location / {
            access_log /var/log/nginx/api.ipv6.fail.log pretty;
            proxy_set_header        Host $http_host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;      # Forward real-ip
            proxy_pass http://localhost:9001;
        }

        # Notification checker
        location /ip {
            add_header Content-Type "application/json";
            return 200 '{"ip":"$remote_addr"}\n';
        }
}
